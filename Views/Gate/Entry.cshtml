@{
    ViewData["Title"] = "Gate Entry";
}

@section Styles {
    <link rel="stylesheet" href="~/css/gate-entry.css" />
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Kamera IP</h6>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <img id="cameraFeed" class="img-fluid" style="max-width: 100%; border: 1px solid #ddd;" alt="Camera Feed">
                    </div>
                    <div class="text-center">
                        <button type="button" class="btn btn-primary" id="startDetectionBtn">
                            <i class="fas fa-video me-1"></i> Mulai Deteksi
                        </button>
                        <button type="button" class="btn btn-secondary" id="stopDetectionBtn" style="display: none;">
                            <i class="fas fa-stop me-1"></i> Berhenti Deteksi
                        </button>
                    </div>
                    <div class="mt-3">
                        <div class="alert alert-info" id="detectionStatus">
                            Status: Menunggu kendaraan...
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Data Kendaraan</h6>
                </div>
                <div class="card-body">
                    <form id="entryForm" class="mb-3">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="vehicleNumber" class="form-label">Nomor Kendaraan</label>
                            <input type="text" class="form-control" id="vehicleNumber" name="vehicleNumber" required>
                        </div>
                        <div class="mb-3">
                            <label for="vehicleType" class="form-label">Jenis Kendaraan</label>
                            <select class="form-select" id="vehicleType" name="vehicleType" required>
                                <option value="">Pilih Jenis</option>
                                <option value="Motorcycle">Motor</option>
                                <option value="Car">Mobil</option>
                                <option value="Truck">Truk</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Foto Kendaraan</label>
                            <img id="vehicleImage" class="img-fluid mb-2" style="max-width: 100%; display: none;">
                            <input type="hidden" id="imagePath" name="imagePath">
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                                <i class="fas fa-print me-2"></i>Cetak Karcis
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" style="display: none;">
    <div class="content-wrapper">
        <div class="spinner-border text-light mb-3" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <h5 class="text-light mb-3" id="loadingText">Memproses...</h5>
        <div class="progress mb-3">
            <div class="progress-bar" role="progressbar" style="width: 0%"></div>
        </div>
        <p class="text-light" id="timeoutText" style="display: none;">
            Waktu pemrosesan lebih lama dari biasanya. Mohon tunggu...
        </p>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let detectionInterval;
        const startDetectionBtn = document.getElementById('startDetectionBtn');
        const stopDetectionBtn = document.getElementById('stopDetectionBtn');
        const detectionStatus = document.getElementById('detectionStatus');
        const submitBtn = document.getElementById('submitBtn');
        const vehicleImage = document.getElementById('vehicleImage');
        const imagePathInput = document.getElementById('imagePath');

        startDetectionBtn.addEventListener('click', startDetection);
        stopDetectionBtn.addEventListener('click', stopDetection);

        function startDetection() {
            startDetectionBtn.style.display = 'none';
            stopDetectionBtn.style.display = 'inline-block';
            detectionStatus.innerHTML = 'Status: Mendeteksi kendaraan...';
            
            detectionInterval = setInterval(detectVehicle, 500);
        }

        function stopDetection() {
            clearInterval(detectionInterval);
            startDetectionBtn.style.display = 'inline-block';
            stopDetectionBtn.style.display = 'none';
            detectionStatus.innerHTML = 'Status: Deteksi dihentikan';
            submitBtn.disabled = true;
        }

        async function detectVehicle() {
            try {
                const response = await fetch('/Gate/DetectVehicle', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });

                const data = await response.json();
                if (data.detected) {
                    clearInterval(detectionInterval);
                    detectionStatus.innerHTML = 'Status: Kendaraan terdeteksi!';
                    submitBtn.disabled = false;
                    
                    if (data.imagePath) {
                        vehicleImage.src = data.imagePath;
                        vehicleImage.style.display = 'block';
                        imagePathInput.value = data.imagePath;
                    }
                }
            } catch (error) {
                console.error('Error detecting vehicle:', error);
                detectionStatus.innerHTML = 'Status: Error - ' + error.message;
            }
        }

        // Handle form submission
        document.getElementById('entryForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            try {
                const response = await fetch('/Gate/ProcessEntry', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Berhasil',
                        text: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });

                    // Reset form
                    this.reset();
                    vehicleImage.style.display = 'none';
                    submitBtn.disabled = true;
                    startDetection();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message
                    });
                }
            } catch (error) {
                console.error('Error submitting form:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Terjadi kesalahan saat memproses data'
                });
            }
        });

        // Start detection automatically when page loads
        window.addEventListener('load', startDetection);
    </script>
} 