@{
    ViewData["Title"] = "Gate Entry";
}

@section Styles {
    <link rel="stylesheet" href="~/css/gate-entry.css" />
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Kamera</h6>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <video id="camera" class="img-fluid" style="max-width: 100%; border: 1px solid #ddd;"></video>
                    </div>
                    <div class="text-center">
                        <button type="button" class="btn btn-primary" id="captureBtn">
                            <i class="fas fa-camera me-1"></i> Ambil Foto
                        </button>
                    </div>
                    <canvas id="canvas" style="display: none;"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Data Kendaraan</h6>
                </div>
                <div class="card-body">
                    <form id="entryForm" method="post">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label class="form-label">Nomor Kendaraan</label>
                            <input type="text" class="form-control" name="VehicleNumber" id="vehicleNumber" required 
                                   pattern="[A-Z]{1,2}\s\d{1,4}\s[A-Z]{1,3}"
                                   placeholder="Contoh: B 1234 ABC">
                            <div class="form-text">Format: [Huruf] [Angka] [Huruf], contoh: B 1234 ABC</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Jenis Kendaraan</label>
                            <select class="form-select" name="VehicleType" required>
                                <option value="">Pilih jenis kendaraan</option>
                                <option value="car">Mobil</option>
                                <option value="motorcycle">Motor</option>
                                <option value="truck">Truk</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nama Pengemudi</label>
                            <input type="text" class="form-control" name="DriverName" placeholder="Opsional">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nomor Telepon</label>
                            <input type="tel" class="form-control" name="PhoneNumber" placeholder="Opsional">
                        </div>
                        <input type="hidden" name="base64Image" id="base64Image">
                        <button type="submit" class="btn btn-success" id="submitBtn" disabled>
                            <i class="fas fa-check me-1"></i> Proses Masuk
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" style="display: none;">
    <div class="content-wrapper">
        <div class="spinner-border text-light mb-3" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <h5 class="text-light mb-3" id="loadingText">Memproses...</h5>
        <div class="progress mb-3">
            <div class="progress-bar" role="progressbar" style="width: 0%"></div>
        </div>
        <p class="text-light" id="timeoutText" style="display: none;">
            Waktu pemrosesan lebih lama dari biasanya. Mohon tunggu...
        </p>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let stream;
        const video = document.getElementById('camera');
        const canvas = document.getElementById('canvas');
        const captureBtn = document.getElementById('captureBtn');
        const submitBtn = document.getElementById('submitBtn');
        const base64Image = document.getElementById('base64Image');
        const entryForm = document.getElementById('entryForm');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const loadingText = document.getElementById('loadingText');
        const timeoutText = document.getElementById('timeoutText');
        const vehicleNumberInput = document.getElementById('vehicleNumber');

        // Start camera when page loads
        document.addEventListener('DOMContentLoaded', startCamera);

        // Clean up camera when page unloads
        window.addEventListener('beforeunload', () => {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
        });

        // Start camera
        async function startCamera() {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ 
                    video: { 
                        width: 1280,
                        height: 720,
                        facingMode: "environment"
                    } 
                });
                video.srcObject = stream;
                video.play();
            } catch (err) {
                console.error('Error accessing camera:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Tidak dapat mengakses kamera. Pastikan kamera tersedia dan izin diberikan.'
                });
            }
        }

        // Capture photo
        captureBtn.addEventListener('click', async () => {
            captureBtn.disabled = true;
            
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            canvas.getContext('2d').drawImage(video, 0, 0);
            base64Image.value = canvas.toDataURL('image/jpeg');
            
            submitBtn.disabled = false;
            captureBtn.disabled = false;

            Swal.fire({
                icon: 'success',
                title: 'Foto Berhasil',
                text: 'Foto kendaraan berhasil diambil',
                timer: 1500,
                showConfirmButton: false
            });
        });

        // Handle form submission
        entryForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            loadingOverlay.style.display = 'block';
            const progressBar = loadingOverlay.querySelector('.progress-bar');
            progressBar.style.width = '0%';
            
            let progress = 0;
            const progressInterval = setInterval(() => {
                progress += 5;
                if (progress <= 90) {
                    progressBar.style.width = progress + '%';
                }
            }, 500);
            
            setTimeout(() => {
                timeoutText.style.display = 'block';
            }, 10000);
            
            try {
                const formData = new FormData(entryForm);
                const response = await fetch('/Gate/ProcessEntry', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                clearInterval(progressInterval);
                loadingOverlay.style.display = 'none';

                if (response.ok) {
                    if (result.success) {
                        Swal.fire({
                            title: 'Berhasil!',
                            text: result.message,
                            icon: 'success',
                            showConfirmButton: true
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Gagal',
                            text: result.message,
                            icon: 'warning'
                        });
                    }
                } else {
                    throw new Error(result.message || 'Terjadi kesalahan saat memproses kendaraan');
                }
            } catch (error) {
                clearInterval(progressInterval);
                loadingOverlay.style.display = 'none';

                Swal.fire({
                    title: 'Error',
                    text: error.message || 'Terjadi kesalahan saat memproses kendaraan',
                    icon: 'error'
                });
            }
        });
    </script>
} 